version: '3.8'

services:
  json-crud-service:
    build: .
    container_name: json-crud-service
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=json-crud"
      - "service=api"

  # 로드 밸런서 역할을 하는 nginx (선택사항)
  nginx:
    image: nginx:alpine
    container_name: json-crud-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - json-crud-service
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=json-crud"
      - "service=proxy"

  # 모니터링을 위한 Prometheus (선택사항)
  prometheus:
    image: prom/prometheus:latest
    container_name: json-crud-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=json-crud"
      - "service=monitoring"

networks:
  default:
    name: json-crud-network
